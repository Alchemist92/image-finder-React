[{"/home/alfred/Desktop/reactSandBox/pics/src/index.js":"1","/home/alfred/Desktop/reactSandBox/pics/src/components/App.js":"2","/home/alfred/Desktop/reactSandBox/pics/src/components/Searchbar.js":"3","/home/alfred/Desktop/reactSandBox/pics/src/api/unsplash.js":"4","/home/alfred/Desktop/reactSandBox/pics/src/components/ImageList.js":"5","/home/alfred/Desktop/reactSandBox/pics/src/components/ImageCard.js":"6"},{"size":202,"mtime":1606727027768,"results":"7","hashOfConfig":"8"},{"size":748,"mtime":1606822274634,"results":"9","hashOfConfig":"8"},{"size":664,"mtime":1606751159617,"results":"10","hashOfConfig":"8"},{"size":195,"mtime":1606821449180,"results":"11","hashOfConfig":"8"},{"size":315,"mtime":1606832621344,"results":"12","hashOfConfig":"8"},{"size":682,"mtime":1606834761446,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f0itay",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/alfred/Desktop/reactSandBox/pics/src/index.js",[],"/home/alfred/Desktop/reactSandBox/pics/src/components/App.js",[],"/home/alfred/Desktop/reactSandBox/pics/src/components/Searchbar.js",[],"/home/alfred/Desktop/reactSandBox/pics/src/api/unsplash.js",[],"/home/alfred/Desktop/reactSandBox/pics/src/components/ImageList.js",["26"],"/home/alfred/Desktop/reactSandBox/pics/src/components/ImageCard.js",[],{"ruleId":null,"fatal":true,"severity":2,"message":"27","line":9,"column":49},"Parsing error: JSX attributes must only be assigned a non-empty expression\n\n   7 | const ImageList = (props) => {\n   8 |   const images = props.images.map((image) => {\n>  9 |     return <ImageCard  key = {image.id} image = {}image/>\n     |                                                 ^\n  10 |   })\n  11 | \n  12 | return <div className= \"image-list\" >{images}</div>"]